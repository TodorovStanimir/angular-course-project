{"version":3,"sources":["./src/app/user/login/login.component.html","./src/app/user/profile/profile.component.html","./src/app/user/register/register.component.html","./src/app/shared/pipes/find-in-array.pipe.ts","./src/app/user/login/login.component.css","./src/app/user/login/login.component.ts","./src/app/user/profile/profile.component.css","./src/app/user/profile/profile.component.ts","./src/app/user/register/register.component.css","./src/app/user/register/register.component.ts","./src/app/user/user-routing.module.ts","./src/app/user/user.module.ts"],"names":[],"mappings":"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","file":"user-user-module-es2015.js","sourcesContent":["export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row-lg-4\\\"></div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-4\\\"></div>\\n        <div class=\\\"col-lg-4\\\">\\n            <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"hadleLogin(loginForm.value)\\\">\\n                <div class=\\\" form-group input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"> <i class=\\\"fa fa-user\\\"></i> </span>\\n                    </div>\\n                    <input name=\\\"username\\\" pattern=\\\"[A-Z][a-z]+\\\\s[A-Z][a-z]+\\\" class=\\\"form-control\\\"\\n                        placeholder=\\\"Full Name\\\" required ngModel>\\n                </div>\\n                <div class=\\\"req-field\\\"\\n                    *ngIf=\\\"loginForm?.controls.username?.touched && loginForm?.controls.username?.errors?.required\\\">\\n                    <p>This field is required!</p>\\n                </div>\\n                <div class=\\\"info-field\\\" *ngIf=\\\"loginForm?.controls.username?.errors?.pattern\\\">\\n                    <p>Name shoud contain space between first and last name!</p>\\n                </div>\\n                <div class=\\\"form-group input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"> <i class=\\\"fa fa-lock\\\"></i> </span>\\n                    </div>\\n                    <input name=\\\"password\\\" pattern=\\\"^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{3,16}$\\\" class=\\\"form-control\\\"\\n                        placeholder=\\\"Type your password\\\" type=\\\"password\\\" required ngModel>\\n                </div>\\n                <div class=\\\"req-field\\\"\\n                    *ngIf=\\\"loginForm?.controls.password?.touched && loginForm?.controls.password?.errors?.required\\\">\\n                    This field is required!\\n                </div>\\n                <div class=\\\"info-field\\\"\\n                    *ngIf=\\\"loginForm?.controls.password?.errors?.pattern\\\">\\n                    Password shoud consists between 3 and 16 symbols: letters and digits!\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <button class=\\\"btn btn-success btn-block\\\" [disabled]=\\\"loginForm.invalid\\\"> Login in\\n                        Your\\n                        account\\n                    </button>\\n                </div>\\n                <p class=\\\"text-center\\\"><b>Have not an account? </b><a routerLink='/profile/register'>Register here</a> </p>\\n            </form>\\n        </div>\\n        <div class=\\\"col-lg-4\\\"></div>\\n    </div>\\n</div>\\n\"","export default \"<div *ngIf=\\\"editedUser\\\" class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-2\\\"> </div>\\n        <div class=\\\"col-lg-4\\\">\\n            <form #editUserForm=\\\"ngForm\\\" (ngSubmit)=\\\"hadleEditUser(editUserForm.value)\\\">\\n                <div class=\\\"form-group input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"> <i class=\\\"fa fa-envelope\\\"></i> </span>\\n                    </div>\\n                    <input name=\\\"email\\\" [(ngModel)]=\\\"editedUser.email\\\"\\n                        pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" class=\\\"form-control\\\"\\n                        placeholder=\\\"Email Address\\\" type=\\\"email\\\" required>\\n                </div>\\n                <div class=\\\"req-field\\\"\\n                    *ngIf=\\\"editUserForm?.controls.email?.touched && editUserForm?.controls.email?.errors?.required\\\">\\n                    Email field is required!\\n                </div>\\n                <div class=\\\"info-field\\\" *ngIf=\\\"editUserForm?.controls.email?.errors?.pattern\\\">\\n                    Email shoud be a valid email address, like example@example.extension!\\n                </div>\\n                <div class=\\\"form-group input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"> <i class=\\\"fa fa-phone\\\"></i> </span>\\n                    </div>\\n                    <input name=\\\"phoneNumber\\\" [(ngModel)]=\\\"editedUser.phoneNumber\\\" pattern=\\\"^[+]{1}\\\\d{11,}$\\\"\\n                        class=\\\"form-control\\\" placeholder=\\\"Phone number\\\" type=\\\"text\\\" required>\\n                </div>\\n                <div class=\\\"req-field\\\"\\n                    *ngIf=\\\"editUserForm?.controls.phoneNumber?.touched && editUserForm?.controls.phoneNumber?.errors?.required\\\">\\n                    Phone field is required!\\n                </div>\\n                <div class=\\\"info-field\\\" *ngIf=\\\"editUserForm?.controls.phoneNumber?.errors?.pattern\\\">\\n                    Phone number should consists country code and at least 10 digits!\\n                </div>\\n                <div class=\\\"form-group input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"> <i class=\\\"fa fa-building\\\"></i> </span>\\n                    </div>\\n                    <input name=\\\"occupation\\\" [(ngModel)]=\\\"editedUser.occupation\\\" pattern=\\\"[A-Za-z]+\\\"\\n                        class=\\\"form-control\\\" placeholder=\\\"Occupation\\\" type=\\\"text\\\" required>\\n                </div>\\n                <div class=\\\"req-field\\\"\\n                    *ngIf=\\\"editUserForm?.controls.occupation?.touched && editUserForm?.controls.occupation?.errors?.required\\\">\\n                    Occupation is reqired!\\n                </div>\\n                <div class=\\\"info-field\\\" *ngIf=\\\"editUserForm?.controls.occupation?.errors?.pattern\\\">\\n                    Occupation field should consists only letters!\\n                </div>\\n                <div class=\\\"form-group input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"> <i class=\\\"fa fa-image\\\"></i> </span>\\n                    </div>\\n                    <input name=\\\"imageUrl\\\" [(ngModel)]=\\\"editedUser.imageUrl\\\" pattern=\\\"^http[s]?:\\\\/\\\\/.+\\\"\\n                        class=\\\"form-control\\\" placeholder=\\\"image url\\\" type=\\\"url\\\" required>\\n                </div>\\n                <div class=\\\"req-field\\\"\\n                    *ngIf=\\\"editUserForm?.controls.imageUrl?.touched && editUserForm?.controls.imageUrl?.errors?.required\\\">\\n                    This field is required!\\n                </div>\\n                <div class=\\\"info-field\\\" *ngIf=\\\"editUserForm?.controls.imageUrl?.errors?.pattern\\\">\\n                    Image URL must start with http or https!\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success btn-block\\\" [disabled]=\\\"editUserForm.invalid\\\">\\n                        Change your profile\\n                    </button>\\n                </div>\\n            </form>\\n        </div>\\n        <div class=\\\"col-lg-4\\\">\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"input-group-prepend-block\\\">\\n                    <span class=\\\"input-group-text\\\">\\n                        <div>You have {{userBooks.length}} books and {{userComments.length}} comments</div>\\n                    </span>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <button class=\\\"book-button\\\" *ngFor=\\\"let book of userBooks\\\"\\n                    [routerLink]=\\\"['/books/details', book['_id'] ]\\\" class=\\\"btn btn-success btn-block\\\">\\n                    {{book.title | uppercase}}&nbsp;&nbsp;{{book.likes}}&nbsp;\\n                    <i class=\\\"fa fa-thumbs-up\\\"></i>&nbsp;&nbsp;\\n                    {{book.dislikes}}&nbsp;\\n                    <i class=\\\"fa fa-thumbs-down\\\"></i>&nbsp;\\n                    {{ booksComments | findInArray: book.title}}&nbsp;\\n                    <i class=\\\"fa fa-comments\\\"></i>\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-4\\\"></div>\\n        <div class=\\\"col-lg-4\\\">\\n            <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"hadleLogin(registerForm.value)\\\">\\n                <div class=\\\"form-group input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"> <i class=\\\"fa fa-user\\\"></i> </span>\\n                    </div>\\n                    <input name=\\\"username\\\" pattern=\\\"[A-Z][a-z]+\\\\s[A-Z][a-z]+\\\" class=\\\"form-control\\\"\\n                        placeholder=\\\"Full Name\\\" required ngModel>\\n                </div>\\n                <div class=\\\"req-field\\\"\\n                    *ngIf=\\\"registerForm?.controls.username?.touched && registerForm?.controls.username?.errors?.required\\\">\\n                    This field is required!\\n                </div>\\n                <div class=\\\"info-field\\\" *ngIf=\\\"registerForm?.controls.username?.errors?.pattern\\\">\\n                    Name shoud contain space between first and last name!\\n                </div>\\n                <div class=\\\"form-group input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"> <i class=\\\"fa fa-envelope\\\"></i> </span>\\n                    </div>\\n                    <input name=\\\"email\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" class=\\\"form-control\\\"\\n                        placeholder=\\\"Email Address\\\" type=\\\"email\\\" required ngModel>\\n                </div>\\n                <div class=\\\"req-field\\\"\\n                    *ngIf=\\\"registerForm?.controls.email?.touched && registerForm?.controls.email?.errors?.required\\\">\\n                    This field is required!\\n                </div>\\n                <div class=\\\"info-field\\\" *ngIf=\\\"registerForm?.controls.email?.errors?.pattern\\\">\\n                    Email shoud be a valid email address, like example@example.extension!\\n                </div>\\n                <div class=\\\"form-group input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"> <i class=\\\"fa fa-phone\\\"></i> </span>\\n                    </div>\\n                    <input name=\\\"phoneNumber\\\" pattern=\\\"^[+]{1}\\\\d{11,}$\\\" class=\\\"form-control\\\" placeholder=\\\"Phone number\\\"\\n                        type=\\\"text\\\" required ngModel>\\n                </div>\\n                <div class=\\\"req-field\\\"\\n                    *ngIf=\\\"registerForm?.controls.phoneNumber?.touched && registerForm?.controls.phoneNumber?.errors?.required\\\">\\n                    This field is required!\\n                </div>\\n                <div class=\\\"info-field\\\" *ngIf=\\\"registerForm?.controls.phoneNumber?.errors?.pattern\\\">\\n                    Phone number should consists country code and at least 10 digits!\\n                </div>\\n                <div class=\\\"form-group input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"> <i class=\\\"fa fa-building\\\"></i> </span>\\n                    </div>\\n                    <input name=\\\"occupation\\\" pattern=\\\"[A-Za-z]+\\\" class=\\\"form-control\\\" placeholder=\\\"Occupation\\\"\\n                        type=\\\"text\\\" required ngModel>\\n                </div>\\n                <div class=\\\"req-field\\\"\\n                    *ngIf=\\\"registerForm?.controls.occupation?.touched && registerForm?.controls.occupation?.errors?.required\\\">\\n                    This field is required!\\n                </div>\\n                <div class=\\\"info-field\\\" *ngIf=\\\"registerForm?.controls.occupation?.errors?.pattern\\\">\\n                    Occupation field should consists only letters!\\n                </div>\\n                <div ngModelGroup=\\\"passwords\\\">\\n                    <div class=\\\"form-group input-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\"> <i class=\\\"fa fa-lock\\\"></i> </span>\\n                        </div>\\n                        <input name=\\\"password\\\" pattern=\\\"^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{3,16}$\\\" class=\\\"form-control\\\"\\n                            placeholder=\\\"Create password\\\" type=\\\"password\\\" required ngModel>\\n                    </div>\\n                    <div class=\\\"req-field\\\"\\n                        *ngIf=\\\"registerForm?.controls.passwords?.controls.password?.touched && registerForm?.controls.passwords?.controls.password?.errors?.required\\\">\\n                        This field is required!\\n                    </div>\\n                    <div class=\\\"info-field\\\"\\n                        *ngIf=\\\"registerForm?.controls.passwords?.controls.password?.errors?.pattern\\\">\\n                        Password shoud consists between 3 and 16 symbols: letters and digits!\\n                    </div>\\n                    <div class=\\\"form-group input-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\"> <i class=\\\"fa fa-lock\\\"></i> </span>\\n                        </div>\\n                        <input name=\\\"confirmPassword\\\"\\n                            pattern=\\\"{{registerForm?.controls.passwords?.controls.password?.value}}\\\"\\n                            class=\\\"form-control\\\" placeholder=\\\"Repeat password\\\" type=\\\"password\\\" required ngModel>\\n                    </div>\\n                    <div class=\\\"req-field\\\"\\n                        *ngIf=\\\"registerForm?.controls.passwords?.controls.confirmPassword?.touched && registerForm?.controls.passwords?.controls.confirmPassword?.errors?.required\\\">\\n                        This field is required!\\n                    </div>\\n                    <div class=\\\"info-field\\\"\\n                        *ngIf=\\\"registerForm?.controls.passwords?.controls.confirmPassword?.touched && registerForm?.controls.passwords?.controls.password?.value!==registerForm?.controls.passwords?.controls.confirmPassword?.value\\\">\\n                        Passwords do not match!\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"> <i class=\\\"fa fa-image\\\"></i> </span>\\n                    </div>\\n                    <input name=\\\"imageUrl\\\" pattern=\\\"^http[s]?:\\\\/\\\\/.+\\\" class=\\\"form-control\\\" placeholder=\\\"image url\\\" type=\\\"url\\\"\\n                        required ngModel>\\n                </div>\\n                <div class=\\\"req-field\\\"\\n                    *ngIf=\\\"registerForm?.controls.imageUrl?.touched && registerForm?.controls.imageUrl?.errors?.required\\\">\\n                    This field is required!\\n                </div>\\n                <div class=\\\"info-field\\\"  *ngIf=\\\"registerForm?.controls.imageUrl?.errors?.pattern\\\">\\n                    Image URL must start with http or https!\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-block\\\" [disabled]=\\\"registerForm.invalid\\\">\\n                        Create Account\\n                    </button>\\n                </div>\\n                <p class=\\\"text-center\\\"><b>Have an account? </b><a routerLink='/profile/login'><b>Log In</b></a> </p>\\n            </form>\\n        </div>\\n        <div class=\\\"col-lg-4\\\"></div>\\n    </div>\\n</div>\"","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'findInArray'\n})\nexport class FindInArrayPipe implements PipeTransform {\n\n  transform(value: [[string, number]], arg: string): number {\n    let index = -1;\n    value.filter((el, ind) => {\n      if (el[0] === arg) { index = ind; }\n    });\n    return index !== -1 ? value[index][1] : null;\n  }\n}\n","export default \"input.ng-valid {\\r\\n    border-left: 2px solid #42A948; /* green */\\r\\n}\\r\\n  \\r\\ninput.ng-invalid.ng-touched {\\r\\n    border-left: 2px solid #A94442; /* red */\\r\\n}\\r\\n  \\r\\n.req-field{\\r\\n    background-color: #A94442;\\r\\n    height: auto;\\r\\n    margin-bottom: 10px;\\r\\n    border-radius: 5px;\\r\\n    text-align: center;\\r\\n    width: 180px;\\r\\n}\\r\\n  \\r\\n.info-field{\\r\\n    background-color: #A94442;\\r\\n    height: auto;\\r\\n    margin-bottom: 10px;\\r\\n    border-radius: 5px;\\r\\n    text-align: center;\\r\\n    width: auto;\\r\\n}\\r\\n  \\r\\ni {\\r\\n    color: #42A948;\\r\\n}\\r\\n  \\r\\nspan{\\r\\n    border-left: 2px solid grey;\\r\\n    border-top: 2px solid grey;\\r\\n    border-bottom: 2px solid grey;\\r\\n}\\r\\n  \\r\\ninput{\\r\\n    border-right: 2px solid grey;\\r\\n    border-top: 2px solid grey;\\r\\n    border-bottom: 2px solid grey;\\r\\n}\\r\\n  \\r\\n.container {\\r\\n    margin-top: 150px;\\r\\n}\\r\\n  \\r\\n.text-center {\\r\\n    font-style: italic;\\r\\n}\\r\\n  \\r\\nbutton{\\r\\n    border: 2px solid grey;\\r\\n    background-color: #42A948;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3VzZXIvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDhCQUE4QixFQUFFLFVBQVU7QUFDOUM7O0FBRUE7SUFDSSw4QkFBOEIsRUFBRSxRQUFRO0FBQzVDOztBQUNBO0lBQ0kseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixZQUFZO0FBQ2hCOztBQUNBO0lBQ0kseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixXQUFXO0FBQ2Y7O0FBQ0E7SUFDSSxjQUFjO0FBQ2xCOztBQUNBO0lBQ0ksMkJBQTJCO0lBQzNCLDBCQUEwQjtJQUMxQiw2QkFBNkI7QUFDakM7O0FBQ0E7SUFDSSw0QkFBNEI7SUFDNUIsMEJBQTBCO0lBQzFCLDZCQUE2QjtBQUNqQzs7QUFDQTtJQUNJLGlCQUFpQjtBQUNyQjs7QUFDQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFDQTtJQUNJLHNCQUFzQjtJQUN0Qix5QkFBeUI7QUFDN0IiLCJmaWxlIjoiLi4vLi4vdXNlci9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW5wdXQubmctdmFsaWQge1xyXG4gICAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCAjNDJBOTQ4OyAvKiBncmVlbiAqL1xyXG59XHJcbiAgXHJcbmlucHV0Lm5nLWludmFsaWQubmctdG91Y2hlZCB7XHJcbiAgICBib3JkZXItbGVmdDogMnB4IHNvbGlkICNBOTQ0NDI7IC8qIHJlZCAqL1xyXG59XHJcbi5yZXEtZmllbGR7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQTk0NDQyO1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHdpZHRoOiAxODBweDtcclxufVxyXG4uaW5mby1maWVsZHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNBOTQ0NDI7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbn1cclxuaSB7XHJcbiAgICBjb2xvcjogIzQyQTk0ODtcclxufVxyXG5zcGFue1xyXG4gICAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCBncmV5O1xyXG4gICAgYm9yZGVyLXRvcDogMnB4IHNvbGlkIGdyZXk7XHJcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgZ3JleTtcclxufVxyXG5pbnB1dHtcclxuICAgIGJvcmRlci1yaWdodDogMnB4IHNvbGlkIGdyZXk7XHJcbiAgICBib3JkZXItdG9wOiAycHggc29saWQgZ3JleTtcclxuICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCBncmV5O1xyXG59XHJcbi5jb250YWluZXIge1xyXG4gICAgbWFyZ2luLXRvcDogMTUwcHg7XHJcbn1cclxuLnRleHQtY2VudGVyIHtcclxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxufVxyXG5idXR0b257XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCBncmV5O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzQyQTk0ODtcclxufSJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private userService: UserService, private router: Router, private toastr: ToastrService) { }\n\n  ngOnInit() {\n  }\n\n  hadleLogin(user: object) {\n    this.userService.login(user).subscribe((data) => {\n      this.toastr.success('Logged in succesfully');\n      this.userService.saveUserInfo(data);\n      this.router.navigate(['/books/all']);\n    });\n  }\n}\n","export default \".opacity {\\r\\n    opacity: 0.7;\\r\\n    border-radius: 0.5rem;\\r\\n    background: white;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\ninput.ng-valid {\\r\\n  border-left: 2px solid #42A948; /* green */\\r\\n}\\r\\n\\r\\ninput.ng-invalid.ng-touched {\\r\\n  border-left: 2px solid #A94442; /* red */\\r\\n}\\r\\n\\r\\n.req-field{\\r\\n  background-color: #A94442;\\r\\n  height: auto;\\r\\n  margin-bottom: 10px;\\r\\n  border-radius: 5px;\\r\\n  text-align: center;\\r\\n  width: 180px;\\r\\n}\\r\\n\\r\\n.info-field{\\r\\n  background-color: #A94442;\\r\\n  height: auto;\\r\\n  margin-bottom: 10px;\\r\\n  border-radius: 5px;\\r\\n  text-align: center;\\r\\n  width: auto;\\r\\n}\\r\\n\\r\\ni {\\r\\n  width: 12px;\\r\\n  color: #42A948;\\r\\n}\\r\\n\\r\\nspan{\\r\\n  border-left: 2px solid grey;\\r\\n  border-top: 2px solid grey;\\r\\n  border-bottom: 2px solid grey;\\r\\n}\\r\\n\\r\\ninput{\\r\\n  border-right: 2px solid grey;\\r\\n  border-top: 2px solid grey;\\r\\n  border-bottom: 2px solid grey;\\r\\n}\\r\\n\\r\\n.container {\\r\\n  margin-top: 50px;\\r\\n}\\r\\n\\r\\nli {\\r\\n  margin: 4px;\\r\\n  border-radius: 2px;\\r\\n  list-style-type: none;\\r\\n}\\r\\n\\r\\n.btn{\\r\\n  text-align: left;\\r\\n}\\r\\n\\r\\nbutton{\\r\\n  border: 2px solid grey;\\r\\n  background-color: #42A948;\\r\\n}\\r\\n\\r\\n.fa-thumbs-up {\\r\\n  color: white; \\r\\n}\\r\\n\\r\\n.fa-thumbs-down {  \\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.fa-comments {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3VzZXIvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1oscUJBQXFCO0lBQ3JCLGlCQUFpQjtJQUNqQixZQUFZO0FBQ2hCOztBQUVBO0VBQ0UsOEJBQThCLEVBQUUsVUFBVTtBQUM1Qzs7QUFFQTtFQUNFLDhCQUE4QixFQUFFLFFBQVE7QUFDMUM7O0FBQ0E7RUFDRSx5QkFBeUI7RUFDekIsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLFlBQVk7QUFDZDs7QUFDQTtFQUNFLHlCQUF5QjtFQUN6QixZQUFZO0VBQ1osbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsV0FBVztBQUNiOztBQUNBO0VBQ0UsV0FBVztFQUNYLGNBQWM7QUFDaEI7O0FBQ0E7RUFDRSwyQkFBMkI7RUFDM0IsMEJBQTBCO0VBQzFCLDZCQUE2QjtBQUMvQjs7QUFDQTtFQUNFLDRCQUE0QjtFQUM1QiwwQkFBMEI7RUFDMUIsNkJBQTZCO0FBQy9COztBQUNBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUNBO0VBQ0UsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxzQkFBc0I7RUFDdEIseUJBQXlCO0FBQzNCOztBQUNBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUNBO0VBQ0UsWUFBWTtBQUNkIiwiZmlsZSI6Ii4uLy4uL3VzZXIvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIub3BhY2l0eSB7XHJcbiAgICBvcGFjaXR5OiAwLjc7XHJcbiAgICBib3JkZXItcmFkaXVzOiAwLjVyZW07XHJcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICAgIGNvbG9yOiBibGFjaztcclxufVxyXG5cclxuaW5wdXQubmctdmFsaWQge1xyXG4gIGJvcmRlci1sZWZ0OiAycHggc29saWQgIzQyQTk0ODsgLyogZ3JlZW4gKi9cclxufVxyXG5cclxuaW5wdXQubmctaW52YWxpZC5uZy10b3VjaGVkIHtcclxuICBib3JkZXItbGVmdDogMnB4IHNvbGlkICNBOTQ0NDI7IC8qIHJlZCAqL1xyXG59XHJcbi5yZXEtZmllbGR7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI0E5NDQ0MjtcclxuICBoZWlnaHQ6IGF1dG87XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHdpZHRoOiAxODBweDtcclxufVxyXG4uaW5mby1maWVsZHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQTk0NDQyO1xyXG4gIGhlaWdodDogYXV0bztcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgd2lkdGg6IGF1dG87XHJcbn1cclxuaSB7XHJcbiAgd2lkdGg6IDEycHg7XHJcbiAgY29sb3I6ICM0MkE5NDg7XHJcbn1cclxuc3BhbntcclxuICBib3JkZXItbGVmdDogMnB4IHNvbGlkIGdyZXk7XHJcbiAgYm9yZGVyLXRvcDogMnB4IHNvbGlkIGdyZXk7XHJcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIGdyZXk7XHJcbn1cclxuaW5wdXR7XHJcbiAgYm9yZGVyLXJpZ2h0OiAycHggc29saWQgZ3JleTtcclxuICBib3JkZXItdG9wOiAycHggc29saWQgZ3JleTtcclxuICBib3JkZXItYm90dG9tOiAycHggc29saWQgZ3JleTtcclxufVxyXG4uY29udGFpbmVyIHtcclxuICBtYXJnaW4tdG9wOiA1MHB4O1xyXG59XHJcbmxpIHtcclxuICBtYXJnaW46IDRweDtcclxuICBib3JkZXItcmFkaXVzOiAycHg7XHJcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xyXG59XHJcblxyXG4uYnRue1xyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcbn1cclxuXHJcbmJ1dHRvbntcclxuICBib3JkZXI6IDJweCBzb2xpZCBncmV5O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM0MkE5NDg7XHJcbn1cclxuLmZhLXRodW1icy11cCB7XHJcbiAgY29sb3I6IHdoaXRlOyBcclxufVxyXG5cclxuLmZhLXRodW1icy1kb3duIHsgIFxyXG4gIGNvbG9yOiB3aGl0ZTtcclxufVxyXG4uZmEtY29tbWVudHMge1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuXHJcblxyXG5cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\nimport { IUserInfo } from 'src/app/shared/interfaces/userInfo';\nimport { IUserChanged } from 'src/app/shared/interfaces/userChanged';\nimport { CommentService } from 'src/app/comment/comment.service';\nimport { BookService } from 'src/app/book/book.service';\nimport { forkJoin, of, Observable } from 'rxjs';\nimport { ICommentInfo } from 'src/app/shared/interfaces/commentInfo';\nimport { IBookInfo } from 'src/app/shared/interfaces/bookInfo';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  editedUser: IUserInfo;\n  userComments: ICommentInfo[];\n  userBooks: IBookInfo[];\n  booksComments: Array<[string, number]>;\n\n  constructor(\n    private userService: UserService,\n    private bookService: BookService,\n    private commentService: CommentService,\n    private router: Router,\n  ) {\n\n  }\n\n  ngOnInit() {\n    const username = localStorage.getItem(`username`);\n    forkJoin(\n      this.userService.getUser(username),\n      this.commentService.getAllComments('author', username),\n      this.bookService.getUserBooks(),\n      this.commentService.getAllComments('all', 'all')\n    ).subscribe((res) => {\n      this.editedUser = Object.assign(res[0][0]);\n      this.userBooks = res[2].sort((a, b) => b.likes - a.likes);\n      this.userComments = res[1];\n      this.userBooks.map((book, ind) => {\n        let counter = 0;\n        res[3].map(comm => {\n          if (comm[`bookId`] === book._id) { counter++; }\n        });\n        this.booksComments.push([book.title, counter]);\n      });\n    });\n  }\n\n  hadleEditUser(editUserForm: IUserChanged) {\n    this.userService.changeUser(editUserForm, localStorage.getItem(`userId`))\n      .subscribe((data: IUserInfo) => {\n        this.userService.saveUserInfo(data);\n        this.router.navigate([`/books/user`]);\n      });\n  }\n}\n","export default \".container {\\r\\n    margin-top: 50px;\\r\\n}\\r\\ninput.ng-valid {\\r\\n    border-left: 2px solid #42A948; /* green */\\r\\n}\\r\\ninput.ng-invalid.ng-touched {\\r\\n    border-left: 2px solid #A94442; /* red */\\r\\n}\\r\\n.req-field{\\r\\n    background-color: #A94442;\\r\\n    height: auto;\\r\\n    margin-bottom: 10px;\\r\\n    border-radius: 5px;\\r\\n    text-align: center;\\r\\n    width: 180px;\\r\\n}\\r\\n.info-field{\\r\\n    background-color: #A94442;\\r\\n    height: auto;\\r\\n    margin-bottom: 10px;\\r\\n    border-radius: 5px;\\r\\n    text-align: center;\\r\\n    width: auto;\\r\\n}\\r\\ni {\\r\\n    color: #42A948;\\r\\n}\\r\\nspan{\\r\\n    border-left: 2px solid grey;\\r\\n    border-top: 2px solid grey;\\r\\n    border-bottom: 2px solid grey;\\r\\n}\\r\\ninput{\\r\\n    border-right: 2px solid grey;\\r\\n    border-top: 2px solid grey;\\r\\n    border-bottom: 2px solid grey;\\r\\n}\\r\\n.text-center {\\r\\n    font-style: italic;\\r\\n}\\r\\nbutton{\\r\\n    border: 2px solid grey;\\r\\n    background-color: #42A948;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3VzZXIvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksOEJBQThCLEVBQUUsVUFBVTtBQUM5QztBQUNBO0lBQ0ksOEJBQThCLEVBQUUsUUFBUTtBQUM1QztBQUNBO0lBQ0kseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixZQUFZO0FBQ2hCO0FBQ0E7SUFDSSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLFdBQVc7QUFDZjtBQUNBO0lBQ0ksY0FBYztBQUNsQjtBQUNBO0lBQ0ksMkJBQTJCO0lBQzNCLDBCQUEwQjtJQUMxQiw2QkFBNkI7QUFDakM7QUFDQTtJQUNJLDRCQUE0QjtJQUM1QiwwQkFBMEI7SUFDMUIsNkJBQTZCO0FBQ2pDO0FBQ0E7SUFDSSxrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLHNCQUFzQjtJQUN0Qix5QkFBeUI7QUFDN0IiLCJmaWxlIjoiLi4vLi4vdXNlci9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XHJcbiAgICBtYXJnaW4tdG9wOiA1MHB4O1xyXG59XHJcbmlucHV0Lm5nLXZhbGlkIHtcclxuICAgIGJvcmRlci1sZWZ0OiAycHggc29saWQgIzQyQTk0ODsgLyogZ3JlZW4gKi9cclxufVxyXG5pbnB1dC5uZy1pbnZhbGlkLm5nLXRvdWNoZWQge1xyXG4gICAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCAjQTk0NDQyOyAvKiByZWQgKi9cclxufVxyXG4ucmVxLWZpZWxke1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0E5NDQ0MjtcclxuICAgIGhlaWdodDogYXV0bztcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB3aWR0aDogMTgwcHg7XHJcbn1cclxuLmluZm8tZmllbGR7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQTk0NDQyO1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG59XHJcbmkge1xyXG4gICAgY29sb3I6ICM0MkE5NDg7XHJcbn1cclxuc3BhbntcclxuICAgIGJvcmRlci1sZWZ0OiAycHggc29saWQgZ3JleTtcclxuICAgIGJvcmRlci10b3A6IDJweCBzb2xpZCBncmV5O1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIGdyZXk7XHJcbn1cclxuaW5wdXR7XHJcbiAgICBib3JkZXItcmlnaHQ6IDJweCBzb2xpZCBncmV5O1xyXG4gICAgYm9yZGVyLXRvcDogMnB4IHNvbGlkIGdyZXk7XHJcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgZ3JleTtcclxufVxyXG4udGV4dC1jZW50ZXIge1xyXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG59XHJcbmJ1dHRvbntcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkIGdyZXk7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDJBOTQ4O1xyXG59Il19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { IUser } from 'src/app/shared/interfaces/user';\nimport { UserService } from '../user.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  @ViewChild('registerForm', { static: true }) htmlForm: NgForm;\n\n  constructor(private router: Router, private userService: UserService, private toastr: ToastrService) { }\n\n  ngOnInit() {\n  }\n\n  hadleLogin(userInfo: IUser) {\n\n    userInfo[`password`] = userInfo[`passwords`][`password`];\n    delete userInfo[`passwords`];\n\n    this.userService.register(userInfo).subscribe(res => {\n      this.toastr.success('You have registered successfully', 'Success!');\n      this.router.navigate(['/profile/login']);\n    });\n  }\n\n\n\n}\n","import { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', pathMatch: 'full', redirectTo: 'login' },\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'profile', component: ProfileComponent },\r\n    { path: 'register', component: RegisterComponent },\r\n    { path: '**', pathMatch: 'full', redirectTo: 'home' }\r\n];\r\n\r\n// @NgModule({\r\n//     imports: [RouterModule.forChild(routes)],\r\n//     exports: [RouterModule]\r\n// })\r\n// export class FurnitureRoutingModule { }\r\n\r\nexport const UserRoutingModule = RouterModule.forChild(routes);\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { RegisterComponent } from './register/register.component';\nimport { UserRoutingModule } from './user-routing.module';\nimport { FindInArrayPipe } from '../shared/pipes/find-in-array.pipe';\n\n\n@NgModule({\n  declarations: [LoginComponent, ProfileComponent, RegisterComponent, FindInArrayPipe],\n  imports: [\n    CommonModule,\n    FormsModule,\n    UserRoutingModule\n  ]\n})\nexport class UserModule { }\n"],"sourceRoot":"webpack:///"}