{"version":3,"sources":["src/app/user/login/login.component.html","src/app/user/profile/profile.component.html","src/app/user/register/register.component.html","src/app/shared/pipes/find-in-array.pipe.ts","src/app/user/login/login.component.css","src/app/user/login/login.component.ts","src/app/user/profile/profile.component.css","src/app/user/profile/profile.component.ts","src/app/user/register/register.component.css","src/app/user/register/register.component.ts","src/app/user/user-routing.module.ts","src/app/user/user.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row-lg-4\\\"></div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-4\\\"></div>\\n        <div class=\\\"col-lg-4\\\">\\n            <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"hadleLogin(loginForm.value)\\\">\\n                <div class=\\\" form-group input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"> <i class=\\\"fa fa-user\\\"></i> </span>\\n                    </div>\\n                    <input name=\\\"username\\\" pattern=\\\"[A-Z][a-z]+\\\\s[A-Z][a-z]+\\\" class=\\\"form-control\\\"\\n                        placeholder=\\\"Full Name\\\" required ngModel>\\n                </div>\\n                <div class=\\\"req-field\\\"\\n                    *ngIf=\\\"loginForm?.controls.username?.touched && loginForm?.controls.username?.errors?.required\\\">\\n                    <p>This field is required!</p>\\n                </div>\\n                <div class=\\\"info-field\\\" *ngIf=\\\"loginForm?.controls.username?.errors?.pattern\\\">\\n                    <p>Name shoud contain space between first and last name!</p>\\n                </div>\\n                <div class=\\\"form-group input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"> <i class=\\\"fa fa-lock\\\"></i> </span>\\n                    </div>\\n                    <input name=\\\"password\\\" pattern=\\\"^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{3,16}$\\\" class=\\\"form-control\\\"\\n                        placeholder=\\\"Type your password\\\" type=\\\"password\\\" required ngModel>\\n                </div>\\n                <div class=\\\"req-field\\\"\\n                    *ngIf=\\\"loginForm?.controls.password?.touched && loginForm?.controls.password?.errors?.required\\\">\\n                    This field is required!\\n                </div>\\n                <div class=\\\"info-field\\\"\\n                    *ngIf=\\\"loginForm?.controls.password?.errors?.pattern\\\">\\n                    Password shoud consists between 3 and 16 symbols: letters and digits!\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <button class=\\\"btn btn-success btn-block\\\" [disabled]=\\\"loginForm.invalid\\\"> Login in\\n                        Your\\n                        account\\n                    </button>\\n                </div>\\n                <p class=\\\"text-center\\\"><b>Have not an account? </b><a routerLink='/profile/register'>Register here</a> </p>\\n            </form>\\n        </div>\\n        <div class=\\\"col-lg-4\\\"></div>\\n    </div>\\n</div>\\n\"","export default \"<div *ngIf=\\\"editedUser\\\" class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-2\\\"> </div>\\n        <div class=\\\"col-lg-4\\\">\\n            <form #editUserForm=\\\"ngForm\\\" (ngSubmit)=\\\"hadleEditUser(editUserForm.value)\\\">\\n                <div class=\\\"form-group input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"> <i class=\\\"fa fa-envelope\\\"></i> </span>\\n                    </div>\\n                    <input name=\\\"email\\\" [(ngModel)]=\\\"editedUser.email\\\"\\n                        pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" class=\\\"form-control\\\"\\n                        placeholder=\\\"Email Address\\\" type=\\\"email\\\" required>\\n                </div>\\n                <div class=\\\"req-field\\\"\\n                    *ngIf=\\\"editUserForm?.controls.email?.touched && editUserForm?.controls.email?.errors?.required\\\">\\n                    Email field is required!\\n                </div>\\n                <div class=\\\"info-field\\\" *ngIf=\\\"editUserForm?.controls.email?.errors?.pattern\\\">\\n                    Email shoud be a valid email address, like example@example.extension!\\n                </div>\\n                <div class=\\\"form-group input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"> <i class=\\\"fa fa-phone\\\"></i> </span>\\n                    </div>\\n                    <input name=\\\"phoneNumber\\\" [(ngModel)]=\\\"editedUser.phoneNumber\\\" pattern=\\\"^[+]{1}\\\\d{11,}$\\\"\\n                        class=\\\"form-control\\\" placeholder=\\\"Phone number\\\" type=\\\"text\\\" required>\\n                </div>\\n                <div class=\\\"req-field\\\"\\n                    *ngIf=\\\"editUserForm?.controls.phoneNumber?.touched && editUserForm?.controls.phoneNumber?.errors?.required\\\">\\n                    Phone field is required!\\n                </div>\\n                <div class=\\\"info-field\\\" *ngIf=\\\"editUserForm?.controls.phoneNumber?.errors?.pattern\\\">\\n                    Phone number should consists country code and at least 10 digits!\\n                </div>\\n                <div class=\\\"form-group input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"> <i class=\\\"fa fa-building\\\"></i> </span>\\n                    </div>\\n                    <input name=\\\"occupation\\\" [(ngModel)]=\\\"editedUser.occupation\\\" pattern=\\\"[A-Za-z]+\\\"\\n                        class=\\\"form-control\\\" placeholder=\\\"Occupation\\\" type=\\\"text\\\" required>\\n                </div>\\n                <div class=\\\"req-field\\\"\\n                    *ngIf=\\\"editUserForm?.controls.occupation?.touched && editUserForm?.controls.occupation?.errors?.required\\\">\\n                    Occupation is reqired!\\n                </div>\\n                <div class=\\\"info-field\\\" *ngIf=\\\"editUserForm?.controls.occupation?.errors?.pattern\\\">\\n                    Occupation field should consists only letters!\\n                </div>\\n                <div class=\\\"form-group input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"> <i class=\\\"fa fa-image\\\"></i> </span>\\n                    </div>\\n                    <input name=\\\"imageUrl\\\" [(ngModel)]=\\\"editedUser.imageUrl\\\" pattern=\\\"^http[s]?:\\\\/\\\\/.+\\\"\\n                        class=\\\"form-control\\\" placeholder=\\\"image url\\\" type=\\\"url\\\" required>\\n                </div>\\n                <div class=\\\"req-field\\\"\\n                    *ngIf=\\\"editUserForm?.controls.imageUrl?.touched && editUserForm?.controls.imageUrl?.errors?.required\\\">\\n                    This field is required!\\n                </div>\\n                <div class=\\\"info-field\\\" *ngIf=\\\"editUserForm?.controls.imageUrl?.errors?.pattern\\\">\\n                    Image URL must start with http or https!\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success btn-block\\\" [disabled]=\\\"editUserForm.invalid\\\">\\n                        Change your profile\\n                    </button>\\n                </div>\\n            </form>\\n        </div>\\n        <div class=\\\"col-lg-4\\\">\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"input-group-prepend-block\\\">\\n                    <span class=\\\"input-group-text\\\">\\n                        <div>You have {{userBooks.length}} books and {{userComments.length}} comments</div>\\n                    </span>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <button class=\\\"book-button\\\" *ngFor=\\\"let book of userBooks\\\"\\n                    [routerLink]=\\\"['/books/details', book['_id'] ]\\\" class=\\\"btn btn-success btn-block\\\">\\n                    {{book.title | uppercase}}&nbsp;&nbsp;{{book.likes}}&nbsp;\\n                    <i class=\\\"fa fa-thumbs-up\\\"></i>&nbsp;&nbsp;\\n                    {{book.dislikes}}&nbsp;\\n                    <i class=\\\"fa fa-thumbs-down\\\"></i>&nbsp;\\n                    {{ booksComments | findInArray: book.title}}&nbsp;\\n                    <i class=\\\"fa fa-comments\\\"></i>\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-4\\\"></div>\\n        <div class=\\\"col-lg-4\\\">\\n            <form #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"hadleLogin(registerForm.value)\\\">\\n                <div class=\\\"form-group input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"> <i class=\\\"fa fa-user\\\"></i> </span>\\n                    </div>\\n                    <input name=\\\"username\\\" pattern=\\\"[A-Z][a-z]+\\\\s[A-Z][a-z]+\\\" class=\\\"form-control\\\"\\n                        placeholder=\\\"Full Name\\\" required ngModel>\\n                </div>\\n                <div class=\\\"req-field\\\"\\n                    *ngIf=\\\"registerForm?.controls.username?.touched && registerForm?.controls.username?.errors?.required\\\">\\n                    This field is required!\\n                </div>\\n                <div class=\\\"info-field\\\" *ngIf=\\\"registerForm?.controls.username?.errors?.pattern\\\">\\n                    Name shoud contain space between first and last name!\\n                </div>\\n                <div class=\\\"form-group input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"> <i class=\\\"fa fa-envelope\\\"></i> </span>\\n                    </div>\\n                    <input name=\\\"email\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" class=\\\"form-control\\\"\\n                        placeholder=\\\"Email Address\\\" type=\\\"email\\\" required ngModel>\\n                </div>\\n                <div class=\\\"req-field\\\"\\n                    *ngIf=\\\"registerForm?.controls.email?.touched && registerForm?.controls.email?.errors?.required\\\">\\n                    This field is required!\\n                </div>\\n                <div class=\\\"info-field\\\" *ngIf=\\\"registerForm?.controls.email?.errors?.pattern\\\">\\n                    Email shoud be a valid email address, like example@example.extension!\\n                </div>\\n                <div class=\\\"form-group input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"> <i class=\\\"fa fa-phone\\\"></i> </span>\\n                    </div>\\n                    <input name=\\\"phoneNumber\\\" pattern=\\\"^[+]{1}\\\\d{11,}$\\\" class=\\\"form-control\\\" placeholder=\\\"Phone number\\\"\\n                        type=\\\"text\\\" required ngModel>\\n                </div>\\n                <div class=\\\"req-field\\\"\\n                    *ngIf=\\\"registerForm?.controls.phoneNumber?.touched && registerForm?.controls.phoneNumber?.errors?.required\\\">\\n                    This field is required!\\n                </div>\\n                <div class=\\\"info-field\\\" *ngIf=\\\"registerForm?.controls.phoneNumber?.errors?.pattern\\\">\\n                    Phone number should consists country code and at least 10 digits!\\n                </div>\\n                <div class=\\\"form-group input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"> <i class=\\\"fa fa-building\\\"></i> </span>\\n                    </div>\\n                    <input name=\\\"occupation\\\" pattern=\\\"[A-Za-z]+\\\" class=\\\"form-control\\\" placeholder=\\\"Occupation\\\"\\n                        type=\\\"text\\\" required ngModel>\\n                </div>\\n                <div class=\\\"req-field\\\"\\n                    *ngIf=\\\"registerForm?.controls.occupation?.touched && registerForm?.controls.occupation?.errors?.required\\\">\\n                    This field is required!\\n                </div>\\n                <div class=\\\"info-field\\\" *ngIf=\\\"registerForm?.controls.occupation?.errors?.pattern\\\">\\n                    Occupation field should consists only letters!\\n                </div>\\n                <div ngModelGroup=\\\"passwords\\\">\\n                    <div class=\\\"form-group input-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\"> <i class=\\\"fa fa-lock\\\"></i> </span>\\n                        </div>\\n                        <input name=\\\"password\\\" pattern=\\\"^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{3,16}$\\\" class=\\\"form-control\\\"\\n                            placeholder=\\\"Create password\\\" type=\\\"password\\\" required ngModel>\\n                    </div>\\n                    <div class=\\\"req-field\\\"\\n                        *ngIf=\\\"registerForm?.controls.passwords?.controls.password?.touched && registerForm?.controls.passwords?.controls.password?.errors?.required\\\">\\n                        This field is required!\\n                    </div>\\n                    <div class=\\\"info-field\\\"\\n                        *ngIf=\\\"registerForm?.controls.passwords?.controls.password?.errors?.pattern\\\">\\n                        Password shoud consists between 3 and 16 symbols: letters and digits!\\n                    </div>\\n                    <div class=\\\"form-group input-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\"> <i class=\\\"fa fa-lock\\\"></i> </span>\\n                        </div>\\n                        <input name=\\\"confirmPassword\\\"\\n                            pattern=\\\"{{registerForm?.controls.passwords?.controls.password?.value}}\\\"\\n                            class=\\\"form-control\\\" placeholder=\\\"Repeat password\\\" type=\\\"password\\\" required ngModel>\\n                    </div>\\n                    <div class=\\\"req-field\\\"\\n                        *ngIf=\\\"registerForm?.controls.passwords?.controls.confirmPassword?.touched && registerForm?.controls.passwords?.controls.confirmPassword?.errors?.required\\\">\\n                        This field is required!\\n                    </div>\\n                    <div class=\\\"info-field\\\"\\n                        *ngIf=\\\"registerForm?.controls.passwords?.controls.confirmPassword?.touched && registerForm?.controls.passwords?.controls.password?.value!==registerForm?.controls.passwords?.controls.confirmPassword?.value\\\">\\n                        Passwords do not match!\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"> <i class=\\\"fa fa-image\\\"></i> </span>\\n                    </div>\\n                    <input name=\\\"imageUrl\\\" pattern=\\\"^http[s]?:\\\\/\\\\/.+\\\" class=\\\"form-control\\\" placeholder=\\\"image url\\\" type=\\\"url\\\"\\n                        required ngModel>\\n                </div>\\n                <div class=\\\"req-field\\\"\\n                    *ngIf=\\\"registerForm?.controls.imageUrl?.touched && registerForm?.controls.imageUrl?.errors?.required\\\">\\n                    This field is required!\\n                </div>\\n                <div class=\\\"info-field\\\"  *ngIf=\\\"registerForm?.controls.imageUrl?.errors?.pattern\\\">\\n                    Image URL must start with http or https!\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-block\\\" [disabled]=\\\"registerForm.invalid\\\">\\n                        Create Account\\n                    </button>\\n                </div>\\n                <p class=\\\"text-center\\\"><b>Have an account? </b><a routerLink='/profile/login'><b>Log In</b></a> </p>\\n            </form>\\n        </div>\\n        <div class=\\\"col-lg-4\\\"></div>\\n    </div>\\n</div>\"","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'findInArray'\n})\nexport class FindInArrayPipe implements PipeTransform {\n\n  transform(value: [[string, number]], arg: string): number {\n    let index = -1;\n    value.filter((el, ind) => {\n      if (el[0] === arg) { index = ind; }\n    });\n    return index !== -1 ? value[index][1] : null;\n  }\n}\n","export default \"input.ng-valid {\\r\\n    border-left: 2px solid #42A948; /* green */\\r\\n}\\r\\n  \\r\\ninput.ng-invalid.ng-touched {\\r\\n    border-left: 2px solid #A94442; /* red */\\r\\n}\\r\\n  \\r\\n.req-field{\\r\\n    background-color: #A94442;\\r\\n    height: auto;\\r\\n    margin-bottom: 10px;\\r\\n    border-radius: 5px;\\r\\n    text-align: center;\\r\\n    width: 180px;\\r\\n}\\r\\n  \\r\\n.info-field{\\r\\n    background-color: #A94442;\\r\\n    height: auto;\\r\\n    margin-bottom: 10px;\\r\\n    border-radius: 5px;\\r\\n    text-align: center;\\r\\n    width: auto;\\r\\n}\\r\\n  \\r\\ni {\\r\\n    color: #42A948;\\r\\n}\\r\\n  \\r\\nspan{\\r\\n    border-left: 2px solid grey;\\r\\n    border-top: 2px solid grey;\\r\\n    border-bottom: 2px solid grey;\\r\\n}\\r\\n  \\r\\ninput{\\r\\n    border-right: 2px solid grey;\\r\\n    border-top: 2px solid grey;\\r\\n    border-bottom: 2px solid grey;\\r\\n}\\r\\n  \\r\\n.container {\\r\\n    margin-top: 150px;\\r\\n}\\r\\n  \\r\\n.text-center {\\r\\n    font-style: italic;\\r\\n}\\r\\n  \\r\\nbutton{\\r\\n    border: 2px solid grey;\\r\\n    background-color: #42A948;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksOEJBQThCLEVBQUUsVUFBVTtBQUM5Qzs7QUFFQTtJQUNJLDhCQUE4QixFQUFFLFFBQVE7QUFDNUM7O0FBQ0E7SUFDSSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLFlBQVk7QUFDaEI7O0FBQ0E7SUFDSSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLFdBQVc7QUFDZjs7QUFDQTtJQUNJLGNBQWM7QUFDbEI7O0FBQ0E7SUFDSSwyQkFBMkI7SUFDM0IsMEJBQTBCO0lBQzFCLDZCQUE2QjtBQUNqQzs7QUFDQTtJQUNJLDRCQUE0QjtJQUM1QiwwQkFBMEI7SUFDMUIsNkJBQTZCO0FBQ2pDOztBQUNBO0lBQ0ksaUJBQWlCO0FBQ3JCOztBQUNBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUNBO0lBQ0ksc0JBQXNCO0lBQ3RCLHlCQUF5QjtBQUM3QiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImlucHV0Lm5nLXZhbGlkIHtcclxuICAgIGJvcmRlci1sZWZ0OiAycHggc29saWQgIzQyQTk0ODsgLyogZ3JlZW4gKi9cclxufVxyXG4gIFxyXG5pbnB1dC5uZy1pbnZhbGlkLm5nLXRvdWNoZWQge1xyXG4gICAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCAjQTk0NDQyOyAvKiByZWQgKi9cclxufVxyXG4ucmVxLWZpZWxke1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0E5NDQ0MjtcclxuICAgIGhlaWdodDogYXV0bztcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB3aWR0aDogMTgwcHg7XHJcbn1cclxuLmluZm8tZmllbGR7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQTk0NDQyO1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG59XHJcbmkge1xyXG4gICAgY29sb3I6ICM0MkE5NDg7XHJcbn1cclxuc3BhbntcclxuICAgIGJvcmRlci1sZWZ0OiAycHggc29saWQgZ3JleTtcclxuICAgIGJvcmRlci10b3A6IDJweCBzb2xpZCBncmV5O1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIGdyZXk7XHJcbn1cclxuaW5wdXR7XHJcbiAgICBib3JkZXItcmlnaHQ6IDJweCBzb2xpZCBncmV5O1xyXG4gICAgYm9yZGVyLXRvcDogMnB4IHNvbGlkIGdyZXk7XHJcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgZ3JleTtcclxufVxyXG4uY29udGFpbmVyIHtcclxuICAgIG1hcmdpbi10b3A6IDE1MHB4O1xyXG59XHJcbi50ZXh0LWNlbnRlciB7XHJcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbn1cclxuYnV0dG9ue1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgZ3JleTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0MkE5NDg7XHJcbn0iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private userService: UserService, private router: Router, private toastr: ToastrService) { }\n\n  ngOnInit() {\n  }\n\n  hadleLogin(user: object) {\n    this.userService.login(user).subscribe((data) => {\n      this.toastr.success('Logged in succesfully');\n      this.userService.saveUserInfo(data);\n      this.router.navigate(['/books/all']);\n    });\n  }\n}\n","export default \".opacity {\\r\\n    opacity: 0.7;\\r\\n    border-radius: 0.5rem;\\r\\n    background: white;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\ninput.ng-valid {\\r\\n  border-left: 2px solid #42A948; /* green */\\r\\n}\\r\\n\\r\\ninput.ng-invalid.ng-touched {\\r\\n  border-left: 2px solid #A94442; /* red */\\r\\n}\\r\\n\\r\\n.req-field{\\r\\n  background-color: #A94442;\\r\\n  height: auto;\\r\\n  margin-bottom: 10px;\\r\\n  border-radius: 5px;\\r\\n  text-align: center;\\r\\n  width: 180px;\\r\\n}\\r\\n\\r\\n.info-field{\\r\\n  background-color: #A94442;\\r\\n  height: auto;\\r\\n  margin-bottom: 10px;\\r\\n  border-radius: 5px;\\r\\n  text-align: center;\\r\\n  width: auto;\\r\\n}\\r\\n\\r\\ni {\\r\\n  width: 12px;\\r\\n  color: #42A948;\\r\\n}\\r\\n\\r\\nspan{\\r\\n  border-left: 2px solid grey;\\r\\n  border-top: 2px solid grey;\\r\\n  border-bottom: 2px solid grey;\\r\\n}\\r\\n\\r\\ninput{\\r\\n  border-right: 2px solid grey;\\r\\n  border-top: 2px solid grey;\\r\\n  border-bottom: 2px solid grey;\\r\\n}\\r\\n\\r\\n.container {\\r\\n  margin-top: 50px;\\r\\n}\\r\\n\\r\\nli {\\r\\n  margin: 4px;\\r\\n  border-radius: 2px;\\r\\n  list-style-type: none;\\r\\n}\\r\\n\\r\\n.btn{\\r\\n  text-align: left;\\r\\n}\\r\\n\\r\\nbutton{\\r\\n  border: 2px solid grey;\\r\\n  background-color: #42A948;\\r\\n}\\r\\n\\r\\n.fa-thumbs-up {\\r\\n  color: white; \\r\\n}\\r\\n\\r\\n.fa-thumbs-down {  \\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.fa-comments {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixxQkFBcUI7SUFDckIsaUJBQWlCO0lBQ2pCLFlBQVk7QUFDaEI7O0FBRUE7RUFDRSw4QkFBOEIsRUFBRSxVQUFVO0FBQzVDOztBQUVBO0VBQ0UsOEJBQThCLEVBQUUsUUFBUTtBQUMxQzs7QUFDQTtFQUNFLHlCQUF5QjtFQUN6QixZQUFZO0VBQ1osbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsWUFBWTtBQUNkOztBQUNBO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixXQUFXO0FBQ2I7O0FBQ0E7RUFDRSxXQUFXO0VBQ1gsY0FBYztBQUNoQjs7QUFDQTtFQUNFLDJCQUEyQjtFQUMzQiwwQkFBMEI7RUFDMUIsNkJBQTZCO0FBQy9COztBQUNBO0VBQ0UsNEJBQTRCO0VBQzVCLDBCQUEwQjtFQUMxQiw2QkFBNkI7QUFDL0I7O0FBQ0E7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBQ0E7RUFDRSxXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLHNCQUFzQjtFQUN0Qix5QkFBeUI7QUFDM0I7O0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBQ0E7RUFDRSxZQUFZO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC91c2VyL3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm9wYWNpdHkge1xyXG4gICAgb3BhY2l0eTogMC43O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMC41cmVtO1xyXG4gICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcbmlucHV0Lm5nLXZhbGlkIHtcclxuICBib3JkZXItbGVmdDogMnB4IHNvbGlkICM0MkE5NDg7IC8qIGdyZWVuICovXHJcbn1cclxuXHJcbmlucHV0Lm5nLWludmFsaWQubmctdG91Y2hlZCB7XHJcbiAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCAjQTk0NDQyOyAvKiByZWQgKi9cclxufVxyXG4ucmVxLWZpZWxke1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNBOTQ0NDI7XHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB3aWR0aDogMTgwcHg7XHJcbn1cclxuLmluZm8tZmllbGR7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI0E5NDQ0MjtcclxuICBoZWlnaHQ6IGF1dG87XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHdpZHRoOiBhdXRvO1xyXG59XHJcbmkge1xyXG4gIHdpZHRoOiAxMnB4O1xyXG4gIGNvbG9yOiAjNDJBOTQ4O1xyXG59XHJcbnNwYW57XHJcbiAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCBncmV5O1xyXG4gIGJvcmRlci10b3A6IDJweCBzb2xpZCBncmV5O1xyXG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCBncmV5O1xyXG59XHJcbmlucHV0e1xyXG4gIGJvcmRlci1yaWdodDogMnB4IHNvbGlkIGdyZXk7XHJcbiAgYm9yZGVyLXRvcDogMnB4IHNvbGlkIGdyZXk7XHJcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIGdyZXk7XHJcbn1cclxuLmNvbnRhaW5lciB7XHJcbiAgbWFyZ2luLXRvcDogNTBweDtcclxufVxyXG5saSB7XHJcbiAgbWFyZ2luOiA0cHg7XHJcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xyXG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxufVxyXG5cclxuLmJ0bntcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcblxyXG5idXR0b257XHJcbiAgYm9yZGVyOiAycHggc29saWQgZ3JleTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDJBOTQ4O1xyXG59XHJcbi5mYS10aHVtYnMtdXAge1xyXG4gIGNvbG9yOiB3aGl0ZTsgXHJcbn1cclxuXHJcbi5mYS10aHVtYnMtZG93biB7ICBcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuLmZhLWNvbW1lbnRzIHtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcblxyXG5cclxuXHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\nimport { IUserInfo } from 'src/app/shared/interfaces/userInfo';\nimport { IUserChanged } from 'src/app/shared/interfaces/userChanged';\nimport { CommentService } from 'src/app/comment/comment.service';\nimport { BookService } from 'src/app/book/book.service';\nimport { forkJoin, of, Observable } from 'rxjs';\nimport { ICommentInfo } from 'src/app/shared/interfaces/commentInfo';\nimport { IBookInfo } from 'src/app/shared/interfaces/bookInfo';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  editedUser: IUserInfo;\n  userComments: ICommentInfo[];\n  userBooks: IBookInfo[];\n  booksComments: Array<[string, number]>;\n\n  constructor(\n    private userService: UserService,\n    private bookService: BookService,\n    private commentService: CommentService,\n    private router: Router,\n  ) {\n\n  }\n\n  ngOnInit() {\n    const username = localStorage.getItem(`username`);\n    forkJoin(\n      this.userService.getUser(username),\n      this.commentService.getAllComments('author', username),\n      this.bookService.getUserBooks(),\n      this.commentService.getAllComments('all', 'all')\n    ).subscribe((res) => {\n      this.editedUser = Object.assign(res[0][0]);\n      this.userBooks = res[2].sort((a, b) => b.likes - a.likes);\n      this.userComments = res[1];\n      this.userBooks.map((book, ind) => {\n        let counter = 0;\n        res[3].map(comm => {\n          if (comm[`bookId`] === book._id) { counter++; }\n        });\n        this.booksComments.push([book.title, counter]);\n      });\n    });\n  }\n\n  hadleEditUser(editUserForm: IUserChanged) {\n    this.userService.changeUser(editUserForm, localStorage.getItem(`userId`))\n      .subscribe((data: IUserInfo) => {\n        this.userService.saveUserInfo(data);\n        this.router.navigate([`/books/user`]);\n      });\n  }\n}\n","export default \".container {\\r\\n    margin-top: 50px;\\r\\n}\\r\\ninput.ng-valid {\\r\\n    border-left: 2px solid #42A948; /* green */\\r\\n}\\r\\ninput.ng-invalid.ng-touched {\\r\\n    border-left: 2px solid #A94442; /* red */\\r\\n}\\r\\n.req-field{\\r\\n    background-color: #A94442;\\r\\n    height: auto;\\r\\n    margin-bottom: 10px;\\r\\n    border-radius: 5px;\\r\\n    text-align: center;\\r\\n    width: 180px;\\r\\n}\\r\\n.info-field{\\r\\n    background-color: #A94442;\\r\\n    height: auto;\\r\\n    margin-bottom: 10px;\\r\\n    border-radius: 5px;\\r\\n    text-align: center;\\r\\n    width: auto;\\r\\n}\\r\\ni {\\r\\n    color: #42A948;\\r\\n}\\r\\nspan{\\r\\n    border-left: 2px solid grey;\\r\\n    border-top: 2px solid grey;\\r\\n    border-bottom: 2px solid grey;\\r\\n}\\r\\ninput{\\r\\n    border-right: 2px solid grey;\\r\\n    border-top: 2px solid grey;\\r\\n    border-bottom: 2px solid grey;\\r\\n}\\r\\n.text-center {\\r\\n    font-style: italic;\\r\\n}\\r\\nbutton{\\r\\n    border: 2px solid grey;\\r\\n    background-color: #42A948;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSw4QkFBOEIsRUFBRSxVQUFVO0FBQzlDO0FBQ0E7SUFDSSw4QkFBOEIsRUFBRSxRQUFRO0FBQzVDO0FBQ0E7SUFDSSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLFlBQVk7QUFDaEI7QUFDQTtJQUNJLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsV0FBVztBQUNmO0FBQ0E7SUFDSSxjQUFjO0FBQ2xCO0FBQ0E7SUFDSSwyQkFBMkI7SUFDM0IsMEJBQTBCO0lBQzFCLDZCQUE2QjtBQUNqQztBQUNBO0lBQ0ksNEJBQTRCO0lBQzVCLDBCQUEwQjtJQUMxQiw2QkFBNkI7QUFDakM7QUFDQTtJQUNJLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksc0JBQXNCO0lBQ3RCLHlCQUF5QjtBQUM3QiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xyXG4gICAgbWFyZ2luLXRvcDogNTBweDtcclxufVxyXG5pbnB1dC5uZy12YWxpZCB7XHJcbiAgICBib3JkZXItbGVmdDogMnB4IHNvbGlkICM0MkE5NDg7IC8qIGdyZWVuICovXHJcbn1cclxuaW5wdXQubmctaW52YWxpZC5uZy10b3VjaGVkIHtcclxuICAgIGJvcmRlci1sZWZ0OiAycHggc29saWQgI0E5NDQ0MjsgLyogcmVkICovXHJcbn1cclxuLnJlcS1maWVsZHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNBOTQ0NDI7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgd2lkdGg6IDE4MHB4O1xyXG59XHJcbi5pbmZvLWZpZWxke1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0E5NDQ0MjtcclxuICAgIGhlaWdodDogYXV0bztcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB3aWR0aDogYXV0bztcclxufVxyXG5pIHtcclxuICAgIGNvbG9yOiAjNDJBOTQ4O1xyXG59XHJcbnNwYW57XHJcbiAgICBib3JkZXItbGVmdDogMnB4IHNvbGlkIGdyZXk7XHJcbiAgICBib3JkZXItdG9wOiAycHggc29saWQgZ3JleTtcclxuICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCBncmV5O1xyXG59XHJcbmlucHV0e1xyXG4gICAgYm9yZGVyLXJpZ2h0OiAycHggc29saWQgZ3JleTtcclxuICAgIGJvcmRlci10b3A6IDJweCBzb2xpZCBncmV5O1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIGdyZXk7XHJcbn1cclxuLnRleHQtY2VudGVyIHtcclxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxufVxyXG5idXR0b257XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCBncmV5O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzQyQTk0ODtcclxufSJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { IUser } from 'src/app/shared/interfaces/user';\nimport { UserService } from '../user.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  @ViewChild('registerForm', { static: true }) htmlForm: NgForm;\n\n  constructor(private router: Router, private userService: UserService, private toastr: ToastrService) { }\n\n  ngOnInit() {\n  }\n\n  hadleLogin(userInfo: IUser) {\n\n    userInfo[`password`] = userInfo[`passwords`][`password`];\n    delete userInfo[`passwords`];\n\n    this.userService.register(userInfo).subscribe(res => {\n      this.toastr.success('You have registered successfully', 'Success!');\n      this.router.navigate(['/profile/login']);\n    });\n  }\n\n\n\n}\n","import { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', pathMatch: 'full', redirectTo: 'login' },\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'profile', component: ProfileComponent },\r\n    { path: 'register', component: RegisterComponent },\r\n    { path: '**', pathMatch: 'full', redirectTo: 'home' }\r\n];\r\n\r\n// @NgModule({\r\n//     imports: [RouterModule.forChild(routes)],\r\n//     exports: [RouterModule]\r\n// })\r\n// export class FurnitureRoutingModule { }\r\n\r\nexport const UserRoutingModule = RouterModule.forChild(routes);\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { RegisterComponent } from './register/register.component';\nimport { UserRoutingModule } from './user-routing.module';\nimport { FindInArrayPipe } from '../shared/pipes/find-in-array.pipe';\n\n\n@NgModule({\n  declarations: [LoginComponent, ProfileComponent, RegisterComponent, FindInArrayPipe],\n  imports: [\n    CommonModule,\n    FormsModule,\n    UserRoutingModule\n  ]\n})\nexport class UserModule { }\n"],"sourceRoot":"webpack:///","file":"user-user-module-es5.js"}